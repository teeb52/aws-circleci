version: '2.1'
orbs:
  aws-cli: circleci/aws-cli@2.0
commands:
  # Command for roll-back
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} --region us-east-1
jobs:
  smoke_test:
#    smoke test if website exists
#    environment:
#      URL: $(aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicDnsName' --output text)
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: Retrieve EC2 public DNS
          command: |
            export URL=$(aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --output text)
            echo "URL=$URL" >> $BASH_ENV
      - run:
          name: smoke test
          command: |
#            URL="https://blog.udakity.com/"
            # Test if website exists
            if curl -s --head ${URL}:3000
            then
              return 0
            else
              return 1
            fi
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run: aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --output text >> inventory
      - add_ssh_keys:
          fingerprints: [ "55:94:a6:8b:25:97:a2:81:7a:4f:de:05:cf:bd:19:62" ]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory main-remote.yml
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: aws configure set aws_access_key_id ${AWS_ACCESS_KEY}
      - run: aws configure set aws_secret_access_key ${AWS_ACCESS_SECRET}
      - run: aws configure set aws_default_region ${AWS_REGION_NAME}
#      - aws-cli/setup:
#          aws-access-key-id: AWS_ACCESS_KEY
#          aws-secret-access-key: AWS_ACCESS_SECRET
#          aws-region: AWS_REGION_NAME
      - run: aws --version
      - run: aws iam list-users
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
#      - run: aws ec2 describe-instances --region us-east-1
      - destroy_environment
workflows:
  my-infra-workflows:
    jobs:
      - create_infrastructure
      - configure_infrastructure:
          requires:
            - create_infrastructure
      - smoke_test:
          requires:
              - create_infrastructure
              - configure_infrastructure
#      - configure_infrastructure